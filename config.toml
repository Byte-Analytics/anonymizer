[Verizon]
# This is a special namespace, items from it are appended to all other namespaces.
[Verizon.common]
carrier = 'Verizon'
config_class = 'csv-config'
dialect = 'excel-tab'

[Verizon.WirelessUsageDetails]
file_mask = 'Wireless Usage Detail'
clear_columns = ['ECPD Profile ID', 'Number']
encode_columns = ['Wireless Number', 'Account Number', 'User Name', 'Invoice Number']

[Verizon.AcctAndWirelessCharges]
file_mask = 'Acct & Wireless Charges Detail Summary Usage'
clear_columns = ['ECPD Profile ID', 'Vendor Name / Contact Information']
encode_columns = ['Wireless Number', 'Account Number', 'User Name', 'Invoice Number']

[Verizon.AccountSummary]
file_mask = 'AccountSummary'
clear_columns = ['ECPD Profile ID', 'Bill Name', 'Remittance Address']
encode_columns = ['Account Number', 'Invoice Number']

[Verizon.AccountAndWirelessSummary]
file_mask = 'Account & Wireless Summary'
clear_columns = ['ECPD Profile ID']
encode_columns = ['Wireless Number', 'Account Number', 'User Name', 'Invoice Number']


[Bell]
[Bell.common]
carrier = 'Bell'

[Bell.ACC_file]
config_class = 'csv-config'
dialect = 'excel'
num_headers = 2
file_mask = '.*_ACC'
clear_columns = []
encode_columns = ['Acct Nbr', 'GST RefNbr', 'QST RefNbr']
encoding = 'iso-8859-1'

[Bell.DTL_file]
config_class = 'csv-config'
dialect = 'excel'
num_headers = 2
file_mask = '.*_DTL'
clear_columns = []
encode_columns = ['Acct Nbr', 'Called Nbr', 'Mobile Nbr']
encoding = 'iso-8859-1'

[Bell.MOB_file]
config_class = 'csv-config'
dialect = 'excel'
num_headers = 2
file_mask = '.*_MOB'
clear_columns = ['Ref Nbr', 'Group Subscriber', 'Category', 'SubCategory']
encode_columns = ['Acct Nbr', 'Mobile Nbr', 'Surname', 'Given Name']
encoding = 'iso-8859-1'

[Bell.CostOverview]
config_class = 'xlsx-config'
file_mask = '.*-Cost overview'
clear_columns = ['Category', 'Sub-category', 'Reference #', 'PO number', 'ESN/IMEI', 'Model code', 'Model description', 'SIM number']
encode_columns = ['Group ID', 'Group name', 'Account number', 'Account name', 'Mobile number', 'User last name', 'User first name']

[Bell.EnhancedUserProfile]
config_class = 'xlsx-config'
file_mask = '.*-Enhanced User profile report'
clear_columns = ['Category', 'Sub-category', 'Reference #', 'PO number', 'ESN/IMEI', 'Model code', 'Model description', 'SIM number']
encode_columns = ['Group ID', 'Group name', 'Account number', 'Account name', 'Mobile number', 'User last name', 'User first name']

[Bell.HardwareReport]
config_class = 'xlsx-config'
file_mask = '.*-Hardware report'
clear_columns = ['Category', 'Sub-category', 'Reference #', 'PO number', 'ESN/IMEI', 'Model code', 'Model description', 'SIM number']
encode_columns = ['Group ID', 'Group name', 'Account number', 'Account name', 'Mobile number', 'User last name', 'User first name']

[Bell.InvoiceChargeReport]
config_class = 'xlsx-config'
file_mask = '.*-Invoice charge report'
clear_columns = ['Category', 'Sub-category', 'Reference #', 'PO number', 'ESN/IMEI', 'Model code', 'Model description', 'SIM number']
encode_columns = ['Group ID', 'Group name', 'Account number', 'Account name', 'Mobile number', 'User last name', 'User first name']

[Bell.UsageOverview]
config_class = 'xlsx-config'
file_mask = '.*-Usage overview'
clear_columns = ['Category', 'Sub-category', 'Reference #', 'PO number', 'ESN/IMEI', 'Model code', 'Model description', 'SIM number']
encode_columns = ['Group ID', 'Group name', 'Account number', 'Account name', 'Mobile number', 'User last name', 'User first name']


[ATnT]
[ATnT.common]
carrier = 'AT&T'

[ATnT.rawdataoutput_file]
config_class = 'csv-config'
delimiter = '|'
file_mask = 'rawdataoutput_'
clear_columns = ['Remit To (address)', 'FAN User Defined Label 1', 'FAN User Defined Label 2', 'FAN User Defined Label 3', 'FAN User Defined Label 4', 'Equipment Transaction Number']
encode_columns = ['Billing Account Number', 'Billing Account Name', 'Wireless Number', 'User Name', 'FAN Invoice Number', 'Data Pooling Rate Plan Code', 'Data Pool Name']
# Encode value in `Section_3` if `Section_2` contains value `User Name`. We actually need the remaining values.
encode_conditional = [['Section_3', 'Section_2', '==', 'User Name']]


[Rogers]
[Rogers.common]
carrier = 'Rogers'
config_class = 'csv-config'
delimiter = '|'

[Rogers.Custom]
skip_initial_lines = 2
file_mask = '.*-Custom'
clear_columns = ['Report Level']
encode_columns = ['Billing Account', 'User Number', 'User Name']

[Rogers.GPRS]
file_mask = '.*-GPRS\.'
clear_columns = []
encode_columns = ['BAN', 'Invoice No.', 'User Name', 'User Number']
# This file will be searched in a path relative to the data that was found.
external_header_file = 'Header-GPRS.txt'

[Rogers.GPRS_RM]
file_mask = '.*-GPRS-Rm\.'
# Despite nice information coming from Carrier Name, it also contains User Number.
clear_columns = []
encode_columns = ['BAN', 'Invoice No.', 'User Name', 'User Number']
external_header_file = 'Header-GPRS.txt'
# Encode each named group in given column according to the regular expression (in Python `re` format).
# In current form it doesn't work with anything that's escaped, so no `\w` etc.
# In this case, "Carrier Name" contains the "User Number" at the very end. The same issue is not present in Voice_RM.
encode_regex = [['^.* (?P<user_number>[0-9]+)$', 'Carrier Name']]

[Rogers.SMS]
file_mask = '.*-SMS\.'
clear_columns = ['Subscriber ID 1', 'Subscriber ID 2', 'Subscriber ID 3', 'Subscriber ID 4']
encode_columns = ['BAN', 'Invoice No.', 'User Name', 'User Number']
external_header_file = 'Header-SMS.txt'
# Encode value in `Called Number` if it's not an asterisk.
encode_conditional = [['Called Number', 'Called Number', '!=', '*']]

[Rogers.Voice]
file_mask = '.*-Voice\.'
clear_columns = ['Subscriber ID 1', 'Subscriber ID 2', 'Subscriber ID 3', 'Subscriber ID 4']
encode_columns = ['BAN', 'Invoice No.', 'User Name', 'User Number']
external_header_file = 'Header-Voice.txt'
encode_conditional = [['Called Number', 'Called Number', '!=', '*']]

[Rogers.Voice_RM]
file_mask = '.*-VoiceRM\.'
clear_columns = ['Subscriber ID 1', 'Subscriber ID 2', 'Subscriber ID 3', 'Subscriber ID 4']
encode_columns = ['BAN', 'Invoice No.', 'User Name', 'User Number']
external_header_file = 'Header-Voice.txt'
encode_conditional = [['Called Number', 'Called Number', '!=', '*']]
# Note that GPRS_RM file has this issue where "User Number" is placed in "Carrier Name" field. This issue
# is not present in the Voice_RM file, in which only the country and the carrier are listed.


[Telus]
[Telus.common]
carrier = 'Telus'
config_class = 'raw-regex-config'
regex_groups = [
    # Match for all phone numbers inside all the tables. Money values are always prepended with currency sign, so it's relatively safe.
    "\t(?P<phone_number>[0-9]{10})\t",
]

[Telus.AccountDetail]
file_mask = 'Account_Detail_'

[Telus.AirtimeDetail]
file_mask = 'Airtime_Detail_'

[Telus.DEWReport]
file_mask = 'DEW_Report_'

[Telus.GroupSummaryReport]
file_mask = 'Group_Summary_Report_'

[Telus.IndividualDetails]
file_mask = 'Individual_Detail_'

[Telus.InvoiceSummary]
file_mask = 'Invoice_Summary_'
